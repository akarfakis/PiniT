@model PiniT.ViewModels.IndexProductsVM

@{
    ViewBag.Title = "Index";
}
    <div class="row mt-3 mb-1">
        <div class="col-md-6 ">
            <h2 class="a">Your Products</h2>

            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        </div>

        
        <div class="col-md-6 mt-auto p-3 border rounded bg-light">
            @using (Html.BeginForm("ManagerIndex", "Products", FormMethod.Get, new { id = "search-form" }))
            {
                <div id="filters" class="row">
                    <div class="col-6 px-1">
                        @Html.EditorFor(x => x.Search, new { htmlAttributes = new { @class = "form-control", placeholder = "Search by product name" } })
                    </div>
                    <div class="col-4 px-1">
                        @Html.DropDownListFor(x => x.Category, (SelectList)ViewBag.Categories, "Category", new { @class = "form-control", id = "category" })
                    </div>
                    <div class="col-2 px-1">
                        <button id="search" type="submit" class="btn btn-primary btn-block">Search</button>
                    </div>
                </div>
            }
        </div>
    </div>
<div id="customer-menu">
    <div class="row">
        @foreach (var category in Model.Categories.Reverse())
        {
            if (Model.Products.Any(x => x.CategoryId == category.Name))
            {


            <div class="col-sm-2"></div>
            <div class=" col-sm-8 rounded shadow-lg mx-auto mt-3 mb-1 text-center">
                <h3 class="h3">@category.Name</h3>
                @foreach (var product in Model.Products)
                {
                    if (product.CategoryId == category.Name)
                    {
                        <p class="h5">@product.Name - @product.Price</p>
                        <p class="font-weight-lighter">@product.Description</p>
                    }
                }
            </div>
            <div class="col-sm-2"></div>
            }
        }
    </div>
</div>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(x => x.Product.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.CategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.Price)
        </th>
        <th></th>
    </tr>

    @foreach (var product in Model.Products)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => product.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => product.CategoryId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => product.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => product.Price)
            </td>
            <td>
                
                <i class="fas fa-spinner fa-pulse">
                    @Html.ActionLink("Edit", "Edit", new { id = product.ProductId }, new { @class = "fas fa-pencil-alt" }) |</i>
                                @Html.ActionLink("Delete", "Delete", new { id = product.ProductId }, new { @class = "glyphicon glyphicon-trash" })
</td>
        </tr>
    }

</table>

@section scripts{
    <script>
        window.onload = () => {
            const categoryDropdown = document.getElementById('category');
            const searchForm = document.getElementById('search-form');
            let searchButton = document.getElementById('search');

            categoryDropdown.oninput = (e) => {
                searchForm.submit();
            };
        };
    </script>
}
